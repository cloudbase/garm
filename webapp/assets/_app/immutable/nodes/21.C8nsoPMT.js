import"../chunks/DsnmJJEf.js";import{i as Ye}from"../chunks/TJn6xDN9.js";import{p as Ke,o as Qe,l as Q,h as Xe,f as F,j as Ze,a as Te,b as w,c as et,g as e,m as p,t as C,k as l,u as U,$ as tt,s as r,w as f,v as X,d as o,r as s,y as Z,z as A,e as at,i as D,C as rt}from"../chunks/DniTuB_0.js";import{i as ee}from"../chunks/DbNhg6mG.js";import{g as Le,d as te,r as Re,b as ae}from"../chunks/BZ2rxtTc.js";import{b as $e}from"../chunks/CCQwxxp9.js";import{b as lt}from"../chunks/C-xTH-sp.js";import{p as ot}from"../chunks/D4Caz1gY.js";import{g as re}from"../chunks/HMJxCnAR.js";import{p as st}from"../chunks/Hb0uuDRx.js";import{t as h}from"../chunks/CBJzOE8U.js";import{e as Ue}from"../chunks/BZiHL9L3.js";import{D as dt}from"../chunks/J4QHiesY.js";import{a as nt,C as it}from"../chunks/Byy0srta.js";var ut=F('<div class="flex items-center justify-center py-12"><div class="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600"></div> <span class="ml-3 text-gray-600 dark:text-gray-400">Loading...</span></div>'),ct=F('<div class="animate-spin rounded-full h-4 w-4 border-b-2 border-gray-600 mr-2"></div> Uploading...',1),pt=rt('<svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12"></path></svg> Upload File',1),bt=F('<!> <div class="flex flex-col h-full space-y-6"><div class="bg-white dark:bg-gray-800 shadow rounded-lg flex-shrink-0"><div class="px-4 py-5 sm:p-6"><h3 class="text-lg leading-6 font-medium text-gray-900 dark:text-white mb-4">Template Information</h3> <form class="space-y-4"><div class="grid grid-cols-1 md:grid-cols-2 gap-4"><div><label for="name" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Name *</label> <input type="text" id="name" required class="mt-1 block w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white sm:text-sm"/></div> <div><label for="description" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Description</label> <input type="text" id="description" class="mt-1 block w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white sm:text-sm"/></div></div> <div class="grid grid-cols-1 md:grid-cols-2 gap-4"><div><label for="forge_type" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Forge Type *</label> <select id="forge_type" required class="mt-1 block w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white sm:text-sm"><option>GitHub</option><option>Gitea</option></select></div> <div><label for="os_type" class="block text-sm font-medium text-gray-700 dark:text-gray-300">OS Type *</label> <select id="os_type" required class="mt-1 block w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white sm:text-sm"><option>Linux</option><option>Windows</option></select></div></div></form></div></div> <div class="bg-white dark:bg-gray-800 shadow rounded-lg flex-1 flex flex-col min-h-0"><div class="px-4 py-5 sm:p-6 flex-1 flex flex-col"><div class="flex items-center justify-between mb-4"><h3 class="text-lg leading-6 font-medium text-gray-900 dark:text-white">Template Content</h3> <div class="flex items-center space-x-3"><button type="button" class="inline-flex items-center px-3 py-1.5 text-sm font-medium rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-200 hover:bg-gray-50 dark:hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed"><!></button> <label for="language-select" class="text-sm font-medium text-gray-700 dark:text-gray-300">Language:</label> <select id="language-select" class="px-3 py-1 text-sm border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white"><option>Bash</option><option>PowerShell</option><option>Python</option><option>Text</option></select></div></div> <input type="file" accept=".sh,.bash,.ps1,.psm1,.py,.txt,.md" style="display: none"/> <div class="mb-4 bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg p-4"><h4 class="text-sm font-medium text-blue-900 dark:text-blue-100 mb-2">Available Template Variables</h4> <p class="text-xs text-blue-800 dark:text-blue-200 mb-3">Your template can use the following variables using Go template syntax (e.g., <code class="bg-blue-100 dark:bg-blue-800 px-1 rounded"></code>):</p> <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 text-xs"><div><h5 class="font-medium text-blue-900 dark:text-blue-100 mb-1">Runner Info</h5> <ul class="space-y-1 text-blue-800 dark:text-blue-200"><li><code class="bg-blue-100 dark:bg-blue-800 px-1 rounded">.RunnerName</code> - Runner name</li> <li><code class="bg-blue-100 dark:bg-blue-800 px-1 rounded">.RunnerLabels</code> - Comma separated labels</li> <li><code class="bg-blue-100 dark:bg-blue-800 px-1 rounded">.RunnerUsername</code> - Runner service username</li> <li><code class="bg-blue-100 dark:bg-blue-800 px-1 rounded">.RunnerGroup</code> - Runner service group</li> <li><code class="bg-blue-100 dark:bg-blue-800 px-1 rounded">.GitHubRunnerGroup</code> - GitHub runner group</li></ul></div> <div><h5 class="font-medium text-blue-900 dark:text-blue-100 mb-1">Download & Install</h5> <ul class="space-y-1 text-blue-800 dark:text-blue-200"><li><code class="bg-blue-100 dark:bg-blue-800 px-1 rounded">.FileName</code> - Download file name</li> <li><code class="bg-blue-100 dark:bg-blue-800 px-1 rounded">.DownloadURL</code> - Runner download URL</li> <li><code class="bg-blue-100 dark:bg-blue-800 px-1 rounded">.TempDownloadToken</code> - Download token</li> <li><code class="bg-blue-100 dark:bg-blue-800 px-1 rounded">.RepoURL</code> - Repository URL</li></ul></div> <div><h5 class="font-medium text-blue-900 dark:text-blue-100 mb-1">Configuration</h5> <ul class="space-y-1 text-blue-800 dark:text-blue-200"><li><code class="bg-blue-100 dark:bg-blue-800 px-1 rounded">.MetadataURL</code> - Instance metadata URL</li> <li><code class="bg-blue-100 dark:bg-blue-800 px-1 rounded">.CallbackURL</code> - Status callback URL</li> <li><code class="bg-blue-100 dark:bg-blue-800 px-1 rounded">.CallbackToken</code> - Callback token</li> <li><code class="bg-blue-100 dark:bg-blue-800 px-1 rounded">.CABundle</code> - CA certificate bundle</li> <li><code class="bg-blue-100 dark:bg-blue-800 px-1 rounded">.EnableBootDebug</code> - Enable debug mode</li> <li><code class="bg-blue-100 dark:bg-blue-800 px-1 rounded">.UseJITConfig</code> - Use JIT configuration</li> <li><code class="bg-blue-100 dark:bg-blue-800 px-1 rounded">.ExtraContext</code> - Additional context map</li></ul></div></div> <p class="text-xs text-blue-700 dark:text-blue-300 mt-3">ðŸ’¡ <strong>Tip:</strong> Use <code class="bg-blue-100 dark:bg-blue-800 px-1 rounded"></code> for conditional content, or <code class="bg-blue-100 dark:bg-blue-800 px-1 rounded"></code> to iterate over extra context.</p></div> <div class="flex-1 min-h-0"><!> <p class="mt-2 text-sm text-gray-500 dark:text-gray-400"> </p></div></div></div></div>',1),gt=F("<!> <!>",1);function Ut(Ae,De){Ke(De,!1);const le=p(),M=p();let _=p(!1),i=p(null),t=p({name:"",description:"",forge_type:"github",os_type:"linux",data:new Uint8Array}),u=p(""),v=p("text"),x=p(!1),I=p(),T=p(!1),L={name:"",description:"",forge_type:"github",os_type:"linux"},Fe="",R=p(!1);async function oe(){if(e(M))try{l(_,!0);const a={name:e(t).name,description:e(t).description||void 0,forge_type:e(t).forge_type,os_type:e(t).os_type,data:Array.from(new TextEncoder().encode(e(u)))};await Le.createTemplate(a),h.add({type:"success",title:"Template created",message:`Template "${e(t).name}" has been created successfully.`}),re(te("/templates"))}catch(a){const c=Ue(a);h.add({type:"error",title:"Failed to create template",message:c})}finally{l(_,!1)}}function Me(){return e(le)}function Ie(){if(Me()){l(R,!0);return}se()}function se(){re(te("/templates"))}function We(){l(R,!1),se()}function Ee(){e(I).click()}async function Se(a){const c=a.target,n=c.files?.[0];if(n){if(n.size>1024*1024){h.add({type:"error",title:"File too large",message:"Please select a file smaller than 1MB."});return}try{l(T,!0);const y=await n.text();l(u,y);const b=n.name.toLowerCase();let m="text";b.endsWith(".sh")||b.endsWith(".bash")?m="bash":b.endsWith(".ps1")||b.endsWith(".psm1")?m="powershell":b.endsWith(".py")?m="python":m=W(y),l(v,m),l(x,!1),h.add({type:"success",title:"File uploaded",message:`Successfully loaded content from "${n.name}".`})}catch{h.add({type:"error",title:"Failed to read file",message:"Unable to read the selected file. Please try again."})}finally{l(T,!1),c.value=""}}}function W(a){const n=a.split(`
`)[0]?.trim()||"";return n.startsWith("#!/bin/bash")||n.startsWith("#!/bin/sh")?"bash":n.startsWith("#!/usr/bin/env pwsh")||n.includes("#ps1_sysnative")?"powershell":n.startsWith("#!/usr/bin/env python")||n.startsWith("#!/usr/bin/python")?"python":a.includes("param(")||a.includes("Write-Host")||a.includes("$_")?"powershell":a.includes("def ")||a.includes("import ")||a.includes("print(")?"python":a.includes("echo ")||a.includes("export ")||a.includes("if [")?"bash":"text"}async function Ge(){const a=st.url.searchParams.get("clone");if(a)try{if(l(_,!0),l(i,await Le.getTemplate(parseInt(a))),!e(i))throw new Error("Template not found");if(f(t,e(t).name=`${e(i).name} (Copy)`),f(t,e(t).description=e(i).description||""),f(t,e(t).forge_type=e(i).forge_type||"github"),f(t,e(t).os_type=e(i).os_type||"linux"),e(i).data)try{if(Array.isArray(e(i).data)){const c=new Uint8Array(e(i).data);l(u,new TextDecoder().decode(c))}else l(u,atob(e(i).data));l(v,W(e(u)))}catch(c){console.error("Failed to decode template data:",c),l(u,"")}}catch(c){const n=Ue(c);h.add({type:"error",title:"Failed to load template",message:n}),re(te("/templates"))}finally{l(_,!1)}}Qe(()=>{Ge()}),Q(()=>(e(t),e(u)),()=>{l(le,e(t).name!==L.name||e(t).description!==L.description||e(t).forge_type!==L.forge_type||e(t).os_type!==L.os_type||e(u)!==Fe)}),Q(()=>(e(t),e(u)),()=>{l(M,e(t).name.trim().length>0&&e(u).trim().length>0)}),Q(()=>(e(u),e(x)),()=>{e(u)&&!e(x)&&l(v,W(e(u)))}),Xe(),Ye();var de=gt();Ze(a=>{C(()=>tt.title=`${e(i),U(()=>e(i)?`Clone ${e(i).name}`:"Create Template")??""} - GARM`)});var ne=Te(de);{var He=a=>{var c=ut();w(a,c)},Pe=a=>{var c=bt(),n=Te(c);{let d=X(()=>(e(i),U(()=>e(i)?`Clone Template: ${e(i).name}`:"Create New Template"))),g=X(()=>!e(M));dt(n,{get title(){return e(d)},subtitle:"Create a new runner install template",onEdit:Ie,onDelete:oe,editLabel:"Cancel",deleteLabel:"Create Template",editVariant:"secondary",deleteVariant:"primary",get deleteDisabled(){return e(g)},editIcon:"<path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M6 18L18 6M6 6l12 12'/>",deleteIcon:"<path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M8 7H5a2 2 0 00-2 2v9a2 2 0 002 2h8a2 2 0 002-2V9a2 2 0 00-2-2h-3m0 0V5a2 2 0 00-2-2H9a2 2 0 00-2 2v2m0 0h4'/>"})}var y=r(n,2),b=o(y),m=o(b),E=r(o(m),2),S=o(E),G=o(S),ie=r(o(G),2);Re(ie),s(G);var ue=r(G,2),ce=r(o(ue),2);Re(ce),s(ue),s(S);var pe=r(S,2),H=o(pe),P=r(o(H),2);C(()=>{e(t),Z(()=>{})});var j=o(P);j.value=j.__value="github";var be=r(j);be.value=be.__value="gitea",s(P),s(H);var ge=r(H,2),B=r(o(ge),2);C(()=>{e(t),Z(()=>{})});var N=o(B);N.value=N.__value="linux";var me=r(N);me.value=me.__value="windows",s(B),s(ge),s(pe),s(E),s(m),s(b);var fe=r(b,2),ve=o(fe),V=o(ve),xe=r(o(V),2),k=o(xe),Ne=o(k);{var Ve=d=>{var g=ct();A(),w(d,g)},qe=d=>{var g=pt();A(),w(d,g)};ee(Ne,d=>{e(T)?d(Ve):d(qe,!1)})}s(k);var $=r(k,4);C(()=>{e(v),Z(()=>{e(x)})});var q=o($);q.value=q.__value="bash";var z=r(q);z.value=z.__value="powershell";var J=r(z);J.value=J.__value="python";var ye=r(J);ye.value=ye.__value="text",s($),s(xe),s(V);var O=r(V,2);lt(O,d=>l(I,d),()=>e(I));var Y=r(O,2),K=r(o(Y),2),ze=r(o(K));ze.textContent="{{ .RunnerName }}",A(),s(K);var he=r(K,4),_e=r(o(he),3);_e.textContent="{{if .CABundle}}...{{end}}";var Je=r(_e,2);Je.textContent="{{range $key, $value := .ExtraContext}}{{$key}}: {{$value}}{{end}}",A(),s(he),s(Y);var ke=r(Y,2),we=o(ke);{let d=X(()=>!e(x));nt(we,{get language(){return e(v)},get autoDetect(){return e(d)},enableTemplateCompletion:!0,minHeight:"400px",placeholder:"Enter your template script content here...",get value(){return e(u)},set value(g){l(u,g)},$$events:{change:g=>l(u,g.detail.value)},$$legacy:!0})}var Ce=r(we,2),Oe=o(Ce);s(Ce),s(ke),s(ve),s(fe),s(y),C(()=>{k.disabled=e(T),at(Oe,`Template content should be a ${e(t),U(()=>e(t).os_type==="windows"?"PowerShell":"bash")??""} script for runner installation and configuration on ${e(t),U(()=>e(t).os_type)??""}.`)}),$e(ie,()=>e(t).name,d=>f(t,e(t).name=d)),$e(ce,()=>e(t).description,d=>f(t,e(t).description=d)),ae(P,()=>e(t).forge_type,d=>f(t,e(t).forge_type=d)),ae(B,()=>e(t).os_type,d=>f(t,e(t).os_type=d)),D("submit",E,ot(oe)),D("click",k,Ee),ae($,()=>e(v),d=>l(v,d)),D("change",$,()=>l(x,!0)),D("change",O,Se),w(a,c)};ee(ne,a=>{e(_)?a(He):a(Pe,!1)})}var je=r(ne,2);{var Be=a=>{it(a,{title:"Unsaved Changes",message:"You have unsaved changes. Are you sure you want to discard them?",confirmText:"Discard Changes",cancelText:"Stay on Page",variant:"danger",$$events:{close:()=>l(R,!1),confirm:We}})};ee(je,a=>{e(R)&&a(Be)})}w(Ae,de),et()}export{Ut as component};
