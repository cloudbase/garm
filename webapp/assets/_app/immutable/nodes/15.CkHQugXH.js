import"../chunks/DsnmJJEf.js";import{i as Ee}from"../chunks/B3Pzt0F_.js";import{p as Me,E as Le,o as Te,l as w,s as r,m as a,g as e,y as T,a as Fe,f as S,k as l,j as c,r as u,c as F,t as K,v as fe,x as xe,u as j,z as $e,e as be,d as Se,h as Ne,b as ze,$ as Be,q as Re}from"../chunks/D8EpLgQ1.js";import{a as De,i as J,s as Ae}from"../chunks/5WA7h8uK.js";import{r as Q,b as Ce,g as oe}from"../chunks/CiE1LlKV.js";import{e as Oe,i as He}from"../chunks/u94nIB4-.js";import{b as ye,a as Pe}from"../chunks/C6k1Q4We.js";import{p as Je}from"../chunks/D4Caz1gY.js";import{M as Ve}from"../chunks/qB7B8uiS.js";import{F as Ye}from"../chunks/CNMHKIIK.js";import{e as Ie,a as ve}from"../chunks/wyaP0EDu.js";import{U as Ke}from"../chunks/CclkODgu.js";import{D as Qe}from"../chunks/KQ2xQpA3.js";import{P as Xe}from"../chunks/CO4LUyTP.js";import{t as X}from"../chunks/BEkVdVE1.js";import{k as Ze,g as et,c as tt,m as rt,p as ot}from"../chunks/BGVHQGl-.js";import{D as at,G as st,a as nt}from"../chunks/C9DJVOi1.js";import{E as it}from"../chunks/B7ITzBt8.js";import{E as lt}from"../chunks/CGpPw4EW.js";import{S as dt}from"../chunks/BE4wujub.js";import"../chunks/CoIRRsD9.js";var ct=S('<div class="mb-4 rounded-md bg-red-50 dark:bg-red-900 p-4"><p class="text-sm font-medium text-red-800 dark:text-red-200"> </p></div>'),ut=S('<div class="text-center py-4"><div class="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto"></div> <p class="mt-2 text-sm text-gray-500 dark:text-gray-400">Loading...</p></div>'),pt=S("<option> </option>"),mt=S('<input type="password" class="block w-full px-3 py-2 mt-3 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white sm:text-sm" placeholder="Enter webhook secret"/>'),gt=S('<p class="text-sm text-gray-500 dark:text-gray-400">Webhook secret will be automatically generated</p>'),ft=S('<form class="space-y-4"><!> <div><label for="name" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Repository Name</label> <input id="name" type="text" required class="block w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white sm:text-sm" placeholder="Enter repository name"/></div> <div><label for="owner" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Repository Owner</label> <input id="owner" type="text" required class="block w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white sm:text-sm" placeholder="Enter repository owner"/></div> <div><label for="credentials" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Credentials</label> <select id="credentials" required class="block w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white sm:text-sm"><option>Select credentials...</option><!></select></div> <div><div class="flex items-center mb-1"><label for="pool_balancer_type" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Pool Balancer Type</label> <div class="ml-2 relative group"><svg class="w-4 h-4 text-gray-400 cursor-help" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg> <div class="absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 w-80 p-3 bg-gray-900 text-white text-xs rounded-lg shadow-lg opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 z-50"><div class="mb-2"><strong>Round Robin:</strong> Cycles through pools in turn. Job 1 → Pool 1, Job 2 → Pool 2, etc.</div> <div><strong>Pack:</strong> Uses first available pool until full, then moves to next pool.</div> <div class="absolute top-full left-1/2 transform -translate-x-1/2 border-4 border-transparent border-t-gray-900"></div></div></div></div> <select id="pool_balancer_type" class="block w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white sm:text-sm"><option>Round Robin</option><option>Pack</option></select></div> <div><div class="flex items-center mb-3"><input id="install-webhook" type="checkbox" class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 dark:border-gray-600 rounded"/> <label for="install-webhook" class="ml-2 text-sm font-medium text-gray-700 dark:text-gray-300">Install Webhook</label></div> <div class="space-y-3"><div class="flex items-center"><input id="generate-webhook-secret" type="checkbox" class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 dark:border-gray-600 rounded"/> <label for="generate-webhook-secret" class="ml-2 text-sm text-gray-700 dark:text-gray-300">Auto-generate webhook secret</label></div> <!></div></div> <div class="flex justify-end space-x-3 pt-4"><button type="button" class="px-4 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded-md hover:bg-gray-50 dark:hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 dark:focus:ring-offset-gray-900 cursor-pointer">Cancel</button> <button type="submit" class="px-4 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 dark:focus:ring-offset-gray-900 disabled:opacity-50 disabled:cursor-not-allowed cursor-pointer"> </button></div></form>'),bt=S('<div class="max-w-2xl w-full p-6"><h3 class="text-lg font-medium text-gray-900 dark:text-white mb-4">Create Repository</h3> <!> <!></div>');function yt(ae,se){Me(se,!1);const[ne,ie]=Ae(),p=()=>De(Ie,"$eagerCache",ne),R=a(),k=a(),G=a(),x=a(),C=Le();let g=a(!1),f=a(""),b=a("github"),o=a({name:"",owner:"",credentials_name:"",webhook_secret:"",pool_balancer_type:"roundrobin"}),D=a(!0),d=a(!0);async function y(){if(!p().loaded.credentials&&!p().loading.credentials)try{await ve.getCredentials()}catch(s){r(f,s instanceof Error?s.message:"Failed to load credentials")}}function _(s){r(b,s.detail),T(o,e(o).credentials_name="")}function P(){if(e(o).credentials_name){const s=e(R).find(A=>A.name===e(o).credentials_name);s&&s.forge_type&&r(b,s.forge_type)}}function E(){const s=new Uint8Array(32);return crypto.getRandomValues(s),Array.from(s,A=>A.toString(16).padStart(2,"0")).join("")}Te(()=>{y()});async function le(){if(!e(o).name?.trim()){r(f,"Repository name is required");return}if(!e(o).owner?.trim()){r(f,"Repository owner is required");return}if(!e(o).credentials_name){r(f,"Please select credentials");return}try{r(g,!0),r(f,"");const s={...e(o),install_webhook:e(D),auto_generate_secret:e(d)};C("submit",s)}catch(s){r(f,s instanceof Error?s.message:"Failed to create repository"),r(g,!1)}}w(()=>p(),()=>{r(R,p().credentials)}),w(()=>p(),()=>{r(k,p().loading.credentials)}),w(()=>(e(R),e(b)),()=>{r(G,e(R).filter(s=>e(b)?s.forge_type===e(b):!0))}),w(()=>e(d),()=>{e(d)?T(o,e(o).webhook_secret=E()):e(d)||T(o,e(o).webhook_secret="")}),w(()=>(e(o),e(d)),()=>{r(x,e(o).name?.trim()!==""&&e(o).owner?.trim()!==""&&e(o).credentials_name!==""&&(e(d)||e(o).webhook_secret?.trim()!==""))}),Fe(),Ee(),Ve(ae,{$$events:{close:()=>C("close")},children:(s,A)=>{var M=bt(),Z=l(c(M),2);{var de=v=>{var h=ct(),I=c(h),W=c(I,!0);u(I),u(h),K(()=>fe(W,e(f))),F(v,h)};J(Z,v=>{e(f)&&v(de)})}var ce=l(Z,2);{var ue=v=>{var h=ut();F(v,h)},pe=v=>{var h=ft(),I=c(h);Ye(I,{get selectedForgeType(){return e(b)},set selectedForgeType(i){r(b,i)},$$events:{select:_},$$legacy:!0});var W=l(I,2),ee=l(c(W),2);Q(ee),u(W);var L=l(W,2),N=l(c(L),2);Q(N),u(L);var z=l(L,2),B=l(c(z),2);K(()=>{e(o),xe(()=>{e(G)})});var O=c(B);O.value=O.__value="";var me=l(O);Oe(me,1,()=>e(G),He,(i,m)=>{var U=pt(),Ge=c(U);u(U);var ke={};K(()=>{fe(Ge,`${e(m),j(()=>e(m).name)??""} (${e(m),j(()=>e(m).endpoint?.name)??""})`),ke!==(ke=(e(m),j(()=>e(m).name)))&&(U.value=(U.__value=(e(m),j(()=>e(m).name)))??"")}),F(i,U)}),u(B),u(z);var H=l(z,2),V=l(c(H),2);K(()=>{e(o),xe(()=>{})});var Y=c(V);Y.value=Y.__value="roundrobin";var te=l(Y);te.value=te.__value="pack",u(V),u(H);var t=l(H,2),n=c(t),re=c(n);Q(re),$e(2),u(n);var $=l(n,2),q=c($),he=c(q);Q(he),$e(2),u(q);var We=l(q,2);{var qe=i=>{var m=mt();Q(m),ye(m,()=>e(o).webhook_secret,U=>T(o,e(o).webhook_secret=U)),F(i,m)},Ue=i=>{var m=gt();F(i,m)};J(We,i=>{e(d)?i(Ue,!1):i(qe)})}u($),u(t);var _e=l(t,2),we=c(_e),ge=l(we,2),je=c(ge,!0);u(ge),u(_e),u(h),K(()=>{ge.disabled=e(g)||e(k)||!e(x),fe(je,e(g)?"Creating...":"Create Repository")}),ye(ee,()=>e(o).name,i=>T(o,e(o).name=i)),ye(N,()=>e(o).owner,i=>T(o,e(o).owner=i)),Ce(B,()=>e(o).credentials_name,i=>T(o,e(o).credentials_name=i)),be("change",B,P),Ce(V,()=>e(o).pool_balancer_type,i=>T(o,e(o).pool_balancer_type=i)),Pe(re,()=>e(D),i=>r(D,i)),Pe(he,()=>e(d),i=>r(d,i)),be("click",we,()=>C("close")),be("submit",h,Je(le)),F(v,h)};J(ce,v=>{e(g)?v(ue):v(pe,!1)})}u(M),F(s,M)},$$slots:{default:!0}}),Se(),ie()}var vt=S('<div class="space-y-6"><!> <!></div> <!> <!> <!>',1);function Gt(ae,se){Me(se,!1);const[ne,ie]=Ae(),p=()=>De(Ie,"$eagerCache",ne),R=a(),k=a(),G=a();let x=a([]),C=a(!0),g=a(""),f=a(""),b=a(!1),o=a(!1),D=a(!1),d=a(null),y=a(null),_=a(1),P=a(25),E=a(1);Te(async()=>{try{r(C,!0);const t=await ve.getRepositories();t&&Array.isArray(t)&&r(x,t)}catch(t){console.error("Failed to load repositories:",t),r(g,t instanceof Error?t.message:"Failed to load repositories")}finally{r(C,!1)}});async function le(){try{await ve.retryResource("repositories")}catch(t){console.error("Retry failed:",t)}}function s(t){r(d,t),r(o,!0)}function A(t){r(y,t),r(D,!0)}function M(){r(b,!1),r(o,!1),r(D,!1),r(d,null),r(y,null),r(g,"")}async function Z(t){try{r(g,"");const n=t.detail,re={name:n.name,owner:n.owner,credentials_name:n.credentials_name,webhook_secret:n.webhook_secret},$=await oe.createRepository(re);if(n.install_webhook&&$.id)try{await oe.installRepoWebhook($.id),X.success("Webhook Installed",`Webhook for repository ${$.owner}/${$.name} has been installed successfully.`)}catch(q){console.warn("Repository created but webhook installation failed:",q),X.error("Webhook Installation Failed",q instanceof Error?q.message:"Failed to install webhook. You can try installing it manually from the repository details page.")}r(b,!1),X.success("Repository Created",`Repository ${$.owner}/${$.name} has been created successfully.`)}catch(n){throw r(g,n instanceof Error?n.message:"Failed to create repository"),n}}async function de(t){if(e(d))try{await oe.updateRepository(e(d).id,t),X.success("Repository Updated",`Repository ${e(d).owner}/${e(d).name} has been updated successfully.`),M()}catch(n){throw n}}async function ce(){if(e(y))try{r(g,""),await oe.deleteRepository(e(y).id),X.success("Repository Deleted",`Repository ${e(y).owner}/${e(y).name} has been deleted successfully.`),M()}catch(t){r(g,t instanceof Error?t.message:"Failed to delete repository")}}const ue=[{key:"repository",title:"Repository",cellComponent:it,cellProps:{entityType:"repository",showOwner:!0}},{key:"endpoint",title:"Endpoint",cellComponent:lt},{key:"credentials",title:"Credentials",cellComponent:st,cellProps:{field:"credentials_name"}},{key:"status",title:"Status",cellComponent:dt,cellProps:{statusType:"entity"}},{key:"actions",title:"Actions",align:"right",cellComponent:nt}],pe={entityType:"repository",primaryText:{field:"name",isClickable:!0,href:"/repositories/{id}",showOwner:!0},customInfo:[{icon:t=>et(t?.endpoint?.endpoint_type||"unknown"),text:t=>t?.endpoint?.name||"Unknown"}],badges:[{type:"custom",value:t=>Ze(t)}],actions:[{type:"edit",handler:t=>s(t)},{type:"delete",handler:t=>A(t)}]};function v(t){r(f,t.detail.term),r(_,1)}function h(t){r(_,t.detail.page)}function I(t){const n=tt(t.detail.perPage);r(P,n.newPerPage),r(_,n.newCurrentPage)}function W(t){s(t.detail.item)}function ee(t){A(t.detail.item)}w(()=>(e(x),p()),()=>{(!e(x).length||p().loaded.repositories)&&r(x,p().repositories)}),w(()=>p(),()=>{r(C,p().loading.repositories)}),w(()=>p(),()=>{r(R,p().errorMessages.repositories)}),w(()=>(e(x),e(f)),()=>{r(k,rt(e(x),e(f)))}),w(()=>(e(E),e(k),e(P),e(_)),()=>{r(E,Math.ceil(e(k).length/e(P))),e(_)>e(E)&&e(E)>0&&r(_,e(E))}),w(()=>(e(k),e(_),e(P)),()=>{r(G,ot(e(k),e(_),e(P)))}),Fe(),Ee();var L=vt();Ne(t=>{Be.title="Repositories - GARM"});var N=ze(L),z=c(N);Xe(z,{title:"Repositories",description:"Manage your GitHub repositories and their runners",actionLabel:"Add Repository",$$events:{action:()=>{r(b,!0)}}});var B=l(z,2);{let t=Re(()=>e(R)||e(g)),n=Re(()=>!!e(R));at(B,{get columns(){return ue},get data(){return e(G)},get loading(){return e(C)},get error(){return e(t)},get searchTerm(){return e(f)},searchPlaceholder:"Search repositories by name or owner...",get currentPage(){return e(_)},get perPage(){return e(P)},get totalPages(){return e(E)},get totalItems(){return e(k),j(()=>e(k).length)},itemName:"repositories",emptyIconType:"building",get showRetry(){return e(n)},get mobileCardConfig(){return pe},$$events:{search:v,pageChange:h,perPageChange:I,retry:le,edit:W,delete:ee}})}u(N);var O=l(N,2);{var me=t=>{yt(t,{$$events:{close:()=>r(b,!1),submit:Z}})};J(O,t=>{e(b)&&t(me)})}var H=l(O,2);{var V=t=>{Ke(t,{get entity(){return e(d)},entityType:"repository",$$events:{close:M,submit:n=>de(n.detail)}})};J(H,t=>{e(o)&&e(d)&&t(V)})}var Y=l(H,2);{var te=t=>{Qe(t,{title:"Delete Repository",message:"Are you sure you want to delete this repository? This action cannot be undone and will remove all associated pools and runners.",get itemName(){return`${e(y),j(()=>e(y).owner)??""}/${e(y),j(()=>e(y).name)??""}`},$$events:{close:M,confirm:ce}})};J(Y,t=>{e(D)&&e(y)&&t(te)})}F(ae,L),Se(),ie()}export{Gt as component};
