// Code generated by go-swagger; DO NOT EDIT.

package repositories

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	apiserver_params "github.com/cloudbase/garm/apiserver/params"
	garm_params "github.com/cloudbase/garm/params"
)

// ListRepoByNamePoolsReader is a Reader for the ListRepoByNamePools structure.
type ListRepoByNamePoolsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListRepoByNamePoolsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListRepoByNamePoolsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewListRepoByNamePoolsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListRepoByNamePoolsOK creates a ListRepoByNamePoolsOK with default headers values
func NewListRepoByNamePoolsOK() *ListRepoByNamePoolsOK {
	return &ListRepoByNamePoolsOK{}
}

/*
ListRepoByNamePoolsOK describes a response with status code 200, with default header values.

Pools
*/
type ListRepoByNamePoolsOK struct {
	Payload garm_params.Pools
}

// IsSuccess returns true when this list repo by name pools o k response has a 2xx status code
func (o *ListRepoByNamePoolsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list repo by name pools o k response has a 3xx status code
func (o *ListRepoByNamePoolsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list repo by name pools o k response has a 4xx status code
func (o *ListRepoByNamePoolsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list repo by name pools o k response has a 5xx status code
func (o *ListRepoByNamePoolsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list repo by name pools o k response a status code equal to that given
func (o *ListRepoByNamePoolsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list repo by name pools o k response
func (o *ListRepoByNamePoolsOK) Code() int {
	return 200
}

func (o *ListRepoByNamePoolsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /repositories/{owner}/{repo}/pools][%d] listRepoByNamePoolsOK %s", 200, payload)
}

func (o *ListRepoByNamePoolsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /repositories/{owner}/{repo}/pools][%d] listRepoByNamePoolsOK %s", 200, payload)
}

func (o *ListRepoByNamePoolsOK) GetPayload() garm_params.Pools {
	return o.Payload
}

func (o *ListRepoByNamePoolsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListRepoByNamePoolsDefault creates a ListRepoByNamePoolsDefault with default headers values
func NewListRepoByNamePoolsDefault(code int) *ListRepoByNamePoolsDefault {
	return &ListRepoByNamePoolsDefault{
		_statusCode: code,
	}
}

/*
ListRepoByNamePoolsDefault describes a response with status code -1, with default header values.

APIErrorResponse
*/
type ListRepoByNamePoolsDefault struct {
	_statusCode int

	Payload apiserver_params.APIErrorResponse
}

// IsSuccess returns true when this list repo by name pools default response has a 2xx status code
func (o *ListRepoByNamePoolsDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this list repo by name pools default response has a 3xx status code
func (o *ListRepoByNamePoolsDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this list repo by name pools default response has a 4xx status code
func (o *ListRepoByNamePoolsDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this list repo by name pools default response has a 5xx status code
func (o *ListRepoByNamePoolsDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this list repo by name pools default response a status code equal to that given
func (o *ListRepoByNamePoolsDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the list repo by name pools default response
func (o *ListRepoByNamePoolsDefault) Code() int {
	return o._statusCode
}

func (o *ListRepoByNamePoolsDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /repositories/{owner}/{repo}/pools][%d] ListRepoByNamePools default %s", o._statusCode, payload)
}

func (o *ListRepoByNamePoolsDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /repositories/{owner}/{repo}/pools][%d] ListRepoByNamePools default %s", o._statusCode, payload)
}

func (o *ListRepoByNamePoolsDefault) GetPayload() apiserver_params.APIErrorResponse {
	return o.Payload
}

func (o *ListRepoByNamePoolsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
